# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
 - mongo:3.5.6
#  - redis:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - backend/node_modules/

stages:
  - backend
  - backend-build
  - backend-deploy

backend-test:
  stage: backend
  coverage: '/^Statements[\s]*:[\s]*(\d+\.*\d*%)/'
  script:
   - cd backend
   - export NODE_ENV=test
   - npm install
   - npm run coverage
  artifacts:
    paths:
     - coverage
   
backend-lint:
  stage: backend
  script:
   - cd backend
   - export NODE_ENV=test
   - npm install
   - npm run lint

build-backend-container:
  only: 
   - master
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  stage: backend-build
  script:
   - cd backend
   - export IMAGE_TAG=$(echo -en $CI_COMMIT_REF_NAME | tr -c '[:alnum:]_.-' '-')
   - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
   - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
   - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
   
backend-deploy-container:
  only: 
   - master
  environment:
    name: staging
    url: https://staging.ip.stimi.ovh
  stage: backend-deploy
  image: cdrx/rancher-gitlab-deploy
  script:
   - upgrade --stack ip-staging --service node-app